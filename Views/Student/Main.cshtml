@model List<LibraryManagementSystem.Models.Book>
<!DOCTYPE html>
<html lang="en">
@{
    Layout = null;
    var rentedBooks = ViewBag.RentedBooks as List<LibraryManagementSystem.ViewModels.RentalViewModel>;
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Dashboard</title>

    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/student_page.css">
    <script src="~/js/login.js" defer></script>
    <script src="~/js/script.js" defer></script>
    <script src="https://kit.fontawesome.com/a270fcf83b.js" crossorigin="anonymous"></script>
</head>

<body>
    <div class="container">

        <header>
            <h1>EYO Library System</h1>

        </header>

        <section class="search">
            <input type="text" placeholder="Search for books..." class="search-bar" oninput="filterBooks()">
        </section>

        <!-- Last Added Books Section -->
        <div class="last-added-books">
            <h2>Last Added Books</h2>
            <div class="scroll-container">
                @if (Model != null && Model.Any())
                {
                    @foreach (var book in Model)
                    {
                        <div class="book-card">
                            <img src="@book.ImagePath" alt="@book.Title">
                            <div class="book-info">
                                <h3>@book.Title</h3>
                                <p>@book.Author</p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No books available. Add some books to get started!</p>
                }
            </div>
        </div>

    </div>

    <script>
        function filterBooks() {
            const searchInput = document.querySelector('.search-bar').value.toLowerCase();
            const newBooks = document.querySelectorAll('.last-added-books .book-card');

            // Filter last added books
            newBooks.forEach(book => {
                const title = book.querySelector('h3').textContent.toLowerCase();
                book.style.display = title.includes(searchInput) ? '' : 'none';
            });

        }
    </script>
</body>
</html>